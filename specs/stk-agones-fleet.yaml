apiVersion: "agones.dev/v1"
kind: Fleet
metadata:
  name: stk-fleet
spec:
  # the number of GameServers to keep Ready or Allocated in this Fleet
  replicas: 1
  # defines how GameServers are organised across the cluster.
  # Options include:
  # "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
  # resources
  # "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
  # cluster
  scheduling: Packed
  # a GameServer template - see:
  # https://agones.dev/site/docs/reference/gameserver/ for all the options
  strategy:
    # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
    # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
    # iteration, until all GameServers have been switched from one version to another.
    # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
    type: RollingUpdate
    # Only relevant when `type: RollingUpdate`
    rollingUpdate:
      # the amount to increment the new GameServers by. Defaults to 25%
      maxSurge: 25%
      # the amount to decrements GameServers by. Defaults to 25%
      maxUnavailable: 25%
  template:
    # GameServer metadata
    metadata:
      labels:
        app: stk
    # GameServer specification
    spec:
      health:
        disabled: true
      ports:
      - name: default
        portPolicy: Dynamic
        containerPort: 8080
      # The GameServer's Pod template
      template:
        spec:
            volumes:
            - name: shared-data
              emptyDir: {}
            containers:
            - name: stk
              image: 163538056407.dkr.ecr.us-west-2.amazonaws.com/stk:0.3
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh","-c","/pre-stop.sh"]
              command: ["/start.sh"]
              env:
              - name: FREQ_CHECK_SESSION
                value: "10"
              - name: NUM_IDLE_SESSION
                value: "5"
              - name: SHARED_FOLDER
                value: "/sharedata"
              - name: WAIT_TO_PLAYERS
                value: "120"
              - name: GAME_SERVER_GROUP_NAME 
                value: "agonsegs"
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            volumeMounts:
            - name: shared-data
              mountPath: /sharedata
            resources:
              requests:
                cpu: 256m
                memory: 256Mi
            nodeSelector: 
              project: agones
