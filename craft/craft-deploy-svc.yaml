apiVersion: v1
kind: Service
metadata:
  name: craft-svc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-name: "craft"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
spec:
  selector:
    app: craft
  ports:
    - protocol: TCP
      port: 4080
      targetPort: 4080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: craft
  name: craft
spec:
  replicas: 1
  selector:
    matchLabels:
      app: craft
  template:
    metadata:
      name: craft
      labels:
        app: craft
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: default
      containers:
        - name: craft
          envFrom:
            - secretRef:
                name: craft
          env:
            - name: REGION
              value: "us-west-2"
            - name: CLUSTER_ARN
              value: "arn:aws:rds:us-west-2:259994957756:cluster:stk-matchfe5bdda5-aanuyipl71w"
            - name: SECRET_ARN
              value: "arn:aws:secretsmanager:us-west-2:259994957756:secret:stkmatchSecret4268A6633fdaa-ktFhOYcon21N-auSnGO"
            - name: DB_NAME
              value: "postgres"
            - name: GAMESTATE
              value: "/game/state"
            - name: SERVERPORT
              value: "4080"
            - name: SPAWN_POINT
              value: "(0, 0, 0, 0, 0)"
          image: 259994957756.dkr.ecr.us-west-2.amazonaws.com/craft:aarch64
          imagePullPolicy: Always
          command: ["python","/server.py"]
          readinessProbe:
            tcpSocket:
              port: 4080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 4080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
#          volumeMounts:
#          - mountPath: /game
#            name: datadir
#      volumes:
#      - emptyDir: {}
#        name: datadir
      #hostNetwork: true
