apiVersion: v1
kind: Service
metadata:
  name: craft-svc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-name: "craft"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "4080"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: TCP
spec:
  selector:
    app: craft
  ports:
    - protocol: TCP
      port: 4080
      targetPort: 4080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: craft
  name: craft
spec:
  replicas: 10
  selector:
    matchLabels:
      app: craft
  template:
    metadata:
      name: craft
      labels:
        app: craft
    spec:
      nodeSelector:
        karpenter.sh/provisioner-name: craft
      containers:
        - name: craft
          envFrom:
            - secretRef:
                name: craft
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVERPORT
              value: "4080"
            - name: SPAWN_POINT
              value: "(0, 0, 0, 0, 0)"
          image: 095974399802.dkr.ecr.us-west-2.amazonaws.com/craft:aarch64
          imagePullPolicy: Always
          command: ["python","/server.py"]
          readinessProbe:
            tcpSocket:
              port: 4080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 4080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 1024m
              memory: 1024Mi
